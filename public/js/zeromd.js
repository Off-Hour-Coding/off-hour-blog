const t="<style>:host{display:block;position:relative;contain:content;}:host([hidden]){display:none;}</style>",e=(t="")=>`https://cdn.jsdelivr.net/npm/${t}`,s=[[e("github-markdown-css@5/github-markdown.min.css")],[e("@highlightjs/cdn-assets@11/styles/github.min.css")],[e("@highlightjs/cdn-assets@11/styles/github-dark.min.css"),'media="(prefers-color-scheme:dark)"'],[e("katex@0/dist/katex.min.css")]],a={marked:e("marked@12/lib/marked.esm.js"),markedBaseUrl:e("marked-base-url@1/+esm"),markedHighlight:e("marked-highlight@2/+esm"),markedExtensions:[[e("marked-gfm-heading-id@3/+esm"),"gfmHeadingId"],[e("marked-alert@2/+esm")]],hljs:e("@highlightjs/cdn-assets@11/es/highlight.min.js"),katex:e("katex@0/dist/katex.mjs"),mermaid:e("mermaid@10/dist/mermaid.esm.min.mjs")};class r extends HTMLElement{get src(){return this.getAttribute("src")}set src(t){t?this.setAttribute("src",t):this.removeAttribute("src")}get auto(){return!this.hasAttribute("no-auto")}get bodyClass(){const t=this.getAttribute("body-class");return"markdown-body"+(t?" "+t:"")}constructor(){super();try{this.version="3.0.0"}catch{}this.template=t;this._clicked=(t=>{var e;if(t.metaKey||t.ctrlKey||t.altKey||t.shiftKey||t.defaultPrevented)return;const s=null==(e=t.target)?void 0:e.closest("a");s&&s.hash&&s.host===location.host&&s.pathname===location.pathname&&this.goto(s.hash)}).bind(this),this._observer=new MutationObserver((()=>{this._observe(),this.auto&&this.render()})),this._loaded=!1,this.root=this}static get observedAttributes(){return["src","body-class"]}attributeChangedCallback(t,e,s){var a;if(this.ready&&e!==s)switch(t){case"body-class":null==(a=this.root.querySelector(".markdown-body"))||a.setAttribute("class",this.bodyClass);break;case"src":this.auto&&this.render()}}async connectedCallback(){var t;this._loaded||(this.hasAttribute("no-shadow")||(this.root=this.attachShadow({mode:"open"})),this.root.prepend(this.frag(`<div class="markdown-styles"></div><div class="${this.bodyClass}"></div>`)),await this.load(),this._loaded=!0),null==(t=this.shadowRoot)||t.addEventListener("click",this._clicked),this._observer.observe(this,{childList:!0}),this._observe(),this.ready=!0,this.fire("zero-md-ready"),this.auto&&this.render()}disconnectedCallback(){var t;null==(t=this.shadowRoot)||t.removeEventListener("click",this._clicked),this._observer.disconnect(),this.ready=!1}_observe(){this.querySelectorAll('template,script[type="text/markdown"]').forEach((t=>this._observer.observe(t.content||t,{childList:!0,subtree:!0,attributes:!0,characterData:!0})))}async load(){}async parse(t){return""}goto(t){var e;const s=this.shadowRoot||document;t&&(null==(e=s.getElementById("#"===t[0]?t.slice(1):t))||e.scrollIntoView())}frag(t){const e=document.createElement("template");return e.innerHTML=t,e.content}hash(t){let e=5381;for(let s=0;s<t.length;s++)e=(e<<5)+e^t.charCodeAt(s);return(e>>>0).toString(36)}tick(){return new Promise((t=>requestAnimationFrame(t)))}fire(t,e={}){this.dispatchEvent(new CustomEvent(t,{detail:e,bubbles:!0}))}async read(t){const{target:e}=t,s=(s="",a="")=>{var r;const i=this.hash(s),n=(null==(r=this.root.querySelector(`.markdown-${e}`))?void 0:r.getAttribute("data-hash"))!==i;return{...t,text:s,hash:i,changed:n,baseUrl:a}};switch(e){case"styles":{const t=(t="")=>{var e;return null==(e=this.querySelector(t))?void 0:e.innerHTML};return s((t("template[data-prepend]")??"")+(t("template:not([data-prepend],[data-append])")??this.template)+(t("template[data-append]")??""))}case"body":{if(this.src){const t=await fetch(this.src);if(t.ok){const e=()=>{const t=document.createElement("a");return t.href=this.src||"",t.href.substring(0,t.href.lastIndexOf("/")+1)};return s(await t.text(),e())}console.warn("[zero-md] error reading src",this.src)}const t=this.querySelector('script[type="text/markdown"]');return s((null==t?void 0:t.text)||"")}default:return s()}}async stamp(t){const{target:e,text:s="",hash:a=""}=t,r=this.root.querySelector(`.markdown-${e}`);if(!r)return t;r.setAttribute("data-hash",a);const i=this.frag(s),n=Array.from(i.querySelectorAll('link[rel="stylesheet"]')||[]),h=Promise.all(n.map((t=>new Promise((e=>{t.onload=e,t.onerror=s=>{console.warn("[zero-md] error loading stylesheet",t.href),e(s)}})))));return r.innerHTML="",r.append(i),await h,{...t,stamped:!0}}async render({fire:t=!0,goto:e=location.hash}={}){const s=await this.read({target:"styles"}),a=s.changed&&this.stamp(s),r=await this.read({target:"body"});if(r.changed){const t=this.parse(r);await a,await this.tick(),await this.stamp({...r,text:await t})}else await a;await this.tick();const i={styles:s.changed,body:r.changed};return t&&this.fire("zero-md-rendered",i),this.auto&&e&&this.goto(e),i}}let i=0;class n extends r{async load({stylesheets:t=s,libraries:e=a}={}){if(this.template+=t.map((([t,...e])=>`<link ${['rel="stylesheet"',...e].join(" ")} href="${t}">`)).join("")+"<style>.markdown-alert{padding:0.25rem 0 0 1rem!important;}</style>",!this.marked){const{marked:t,markedBaseUrl:s,markedHighlight:a,markedExtensions:r}=e,i=await Promise.all([t,s,a].concat(r.map((t=>t[0]))).map((t=>import(t))));this.marked=new i[0].Marked({async:!0}),this.setBaseUrl=i[1].baseUrl,this.markedHighlight=i[2].markedHighlight;for(const[t,e]of i.slice(3).map(((t,e)=>[t,r[e][1]||"default"])))this.marked.use(t[e]())}const r=async()=>{this.katex=(await import(e.katex)).default},n=/^(\${1,2})(?!\$)((?:\\.|[^\\\n])*?(?:\\.|[^\\\n\$]))\1(?=[\s?!\.,:？！。，：]|$)/,h=/^(\${1,2})\n((?:\\[^]|[^\\])+?)\n\1(?:\n|$)/;this.marked.use({...this.markedHighlight({async:!0,highlight:async(t="",s="")=>{if("mermaid"===s){this.mermaid||(this.mermaid=(await import(e.mermaid)).default,this.mermaid.initialize({startOnLoad:!1}));const{svg:s}=await this.mermaid.render("mermaid-svg-"+i++,t);return s}return"math"===s?(this.katex||await r(),this.parseKatex(t,{displayMode:!0})):(this.hljs||(this.hljs=(await import(e.hljs)).default),this.hljs.getLanguage(s)?this.hljs.highlight(t,{language:s}).value:this.hljs.highlightAuto(t).value)}}),renderer:{code:(t="",e="")=>"mermaid"===e?`<div class="mermaid">${t}</div>`:"math"===e?t:`<pre><code class="hljs${e?` language-${e}`:""}">${t}\n</code></pre>`}},{extensions:[{name:"inlineKatex",level:"inline",start(t){let e,s=t;for(;s;){if(e=s.indexOf("$"),-1===e)return;if(0===e||" "===s.charAt(e-1)){if(s.substring(e).match(n))return e}s=s.substring(e+1).replace(/^\$+/,"")}},tokenizer(t){const e=t.match(n);if(e)return{type:"inlineKatex",raw:e[0],text:e[2].trim(),displayMode:2===e[1].length}},renderer:t=>t.text},{name:"blockKatex",level:"block",tokenizer(t){const e=t.match(h);if(e)return{type:"blockKatex",raw:e[0],text:e[2].trim(),displayMode:2===e[1].length}},renderer:t=>t.text}],walkTokens:async t=>{["inlineKatex","blockKatex"].includes(t.type)&&(this.katex||await r(),t.text=this.parseKatex(t.text,{displayMode:"blockKatex"===t.type}))}})}parseKatex(t="",e={}){return this.katex.renderToString(t,{...e,throwOnError:!1})}async parse({text:t="",baseUrl:e=""}){return this.marked.use(this.setBaseUrl(e||"")),this.marked.parse(t)}}new URL(import.meta.url).searchParams.has("register")&&customElements.define("zero-md",n);export{t as DEFAULT_HOST_CSS,a as DEFAULT_LIBRARIES,s as DEFAULT_STYLESHEETS,r as ZeroMdBase,n as default};
